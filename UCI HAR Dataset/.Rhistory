created = h5createFile("example.h5")
created
created = h5createFile("example.h5", "foo")
created = h5createGroup("example.h5", "foo")
created = h5createGroup("example.h5", "baa")
created = h5createGroup("example.h5", "foo/foobaa")
h5ls("example.h5")
A = matrix(1:10, nr = 5, nc = 2)
B = array(seq(0.1, 2.0, by = 0.1), dim = c(5, 2, 2))
attr(B, "scale") <- "liter"
h5write(B, "example.5h", "foo/foobaa/B")
h4ls("example.h5")
h5ls("example.h5")
h5write(B, "example.h5", "foo/foobaa/B")
h5ls("example.h5")
readA = h5read("example.h5", "foo/A")
h5write(c(12, 13, 14), "example.h5", "foo/A", index = list(1:3:1))
con = url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
htmlCode = readLines(con)
close(con)
htmlCode
library(XML)
url <- "http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en"
html <- htmlTreeParse(url, useInternalNodes = T)
library(httr)
html2 = GET(url)
content2 = content(html2, as = "text")
parsedHtml = htmlParse(content2, asText = TRUE)
xpathSApply(parsedHtml, "//title", xmlValue)
pg1 = GET("http://httpbin.org/basic-auth/user/passwd")
pg1
pg2 = GET("http://httpbin.org/basic-auth/user/passwd", authenticate("user", "passwd"))
pg2
names(pg2)
google = handle("http://google.com")
pg1 = GET(handle = google, path = "/")
pg2 = GET(handle = google, path = "search")
pg1
names(pg1)
myapp = oauth_app("twitter", key = "yourConsumerKeyHere", secret = "yourConsumerSecretHere")
sig = sign_oauth1.0(myapp, token = "yourTokenHere", token_secret = "yourTokenSecretHere")
homeTL = GET("https://api.twitter.com/1.1/statues/home_timeline.json", sig)
json1 = content(homeTL)
json2 = jsonlite::fromJSON(toJSON(json1))
library(jsonlite)
json2 = jsonlite::fromJSON(toJSON(json1))
json2
?connections
?read.foo
library(lattice)
library(datasets)
xyplot(Ozone ~ Wind, data = airquality)
airquality <- transform(airquality, Month = factor(Month))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1))
p <- xyplot(Ozone ~ Wind, data = airquality)
print(p)
set.seed(10)
x <- rnorm(100)
f <- rep(0:1, each = 50)
y <- x + f- f * x + rnorm(100, sd = 0.5)
f <- factor(f, labels = c("Group 1", "Group 2"))
xyplot(y ~ x | f, layout = c(2,1))
xyplot(y ~ x | f, panel = function(x, y, ...) {})
xyplot(y ~ x | f, panel = function(x, y, ...) {panel.xyplot(x, y, ...); panel.lmline(x, y, col = 2)})
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", key = "56b637a5baffac62cad9", secret = "8e107541ae1791259e9987d544ca568633da2ebf")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github", key = "56b637a5baffac62cad9", secret = "8e107541ae1791259e9987d544ca568633da2ebf")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github", key = "alphaecho1229", secret = "Ecbagjcad3679")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github", key = "af1155cb12ba046aa34e", secret = "82fd36837af02a9265a58b35877cbf98dc098a44")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
library(httpuv)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = "lubridate")
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22"14)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 13, minutes = 27)
this_moment
?now
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "acs.csv")
?strsplit
acs_df <- read.csv("acs.csv")
strsplit(acs.df, "wgtp")
strsplit(acs_df, "wgtp")
strsplit(names(acs_df), "wgtp")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "GDP.csv")
GDP_df <- read.csv("GDP.csv")
?replace
?remove
?replace
names(GDP_df)
GDPs <- GDP_df$Gross.domestic.product.2012
head(GDPs)
head(GDP_df)
GDPs <- GDP_df$X.3
head(GDPs)
GDPs <- GDPs[5:]
GDPs <- GDPs[5:,]
GDPs <- GDPs[, 5:]
GDPs <- GDPs[5:]
GDP_df <- read.csv("GDP.csv", skip = 4)
head(GDP_df)
GDPS <- GDP_df$X.4
head(GDPS)
tail(GDPS)
GDP2 <- gsub(",", "", GDPS)
?paste
GDP2 <- past(GDPS, ",")
GDP2 <- paste(GDPS, ",")
GDP2
?strsplit
GDP2 <- strsplit(GDPS, ",", fixed = TRUE)
GDP2 <- strsplit(GDPS, ",")
class(GDPS)
GDP2 <- as.character(GDPS)
head(GDP2)
GDP2 <- str_trim(GDP2)
GDP2 <- strsplit(GDPS, ",", fixed = TRUE)
GDP2 <- strsplit(GDP2, ",", fixed = TRUE)
head(GDP2)
?paste
GDP3 <- paste(GDP2, sep = '')
head(GDP3)
GDP3[1]
GDP2
head(GDP2)
GDP2[1]
GDP3 <- paste0(GDP2)
head(GPD3)
head(GDP3)
paste0(GDP3[1])
paste0(GDP3[[1]])
library(stringr)
paste0(GDP3[[1]])
gsub(",", "", GDP2)
head(GDP_df)
head(GDP2)
head(GDPS)
GDP2 <- as.character(GDPS)
str_trim(GDP2)
GDP_df <- read.csv("GDP.csv", skip = 4, nrows = 190)
head(GDP_df)
GDPS <- GDP_df$X.4
head(GDPS)
GDP2 <- as.character(GDPS)
GDP3 <- str_trim(GDP2)
head(GDP3)
gsub(",", "", GDP3)
GDP4 <- gsub(",", "", GDP3)
mean(GDP4)
mean(as.numberic(GDP4))
mean(as.numeric(GDP4))
?grep
head(GDP_df)
countryNames <- GDP_df$X.3
grep("^United", countryNames)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", "education.csv")
education_df <- read.csv("education.csv")
head(education_df)
?rename
library(dplyr)
?rename
GDPS <- rename(GDPS, X = "CountryCode")
GDPS <- mutate(GDPS, CountryCode = X)
?mutate
GDPS <- mutate(GDPS, X = CountryCode)
class(GDPS$X)
class(GDPS)
GDPS <- rename(GDP_df, X = "CountryCode")
GDPS <- rename(GDP_df, CountryCode = X)
head(GDPS)
?merge
merged_df <- merge(GDPS, education_df, CountryCode)
merged_df <- merge(GDPS, education_df, "CountryCode")
head(merged_df)
names(merged_df)
notes <- merged_df$Special.Notes
grep("June|JUNE", notes, value = TRUe)
grep("June|JUNE", notes, value = TRUE)
grep("Fiscal year end: June", notes, value = TRUE)
library(quantmod)
download.package("quantmod")
download.packages("quantmod")
download.packages("quantmod", C:\Users\Alex\Documents\R\win-library\3.4)
download.packages("quantmod", Users\Alex\Documents\R\win-library\3.4)
?download.packages
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
df_2012 <- sampleTimes[grep("2012", sampleTimes)]
df_2012
df_monday <- weekdays(df_2012)
length(grep("Monday", df_monday))
swirl()
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0) <- make.names(cn[[1]][wcol])
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1 < 0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates pm1$Date
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 & County.site %in% both)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1))
plot(dates0, x0sub, pch = 20)
abline(median(x0sub, na.rm = TRUE), lwd = 2, )
abline(h = median(x0sub, na.rm = TRUE), lwd = 2, )
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE), lwd = 2, )
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(0.5, 2.5)))
with(mrg, plot(rep(2, 52), mrg[, 3])
)
with(mrg, points(rep(2, 52), mrg[, 3]))
play()
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(0.5, 2.5)))
with(mrg, points(rep(2, 52), mrg[, 3]))
nxt()
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x < mrg$mean.y]
mrg[mrg$mean.x < mrg$mean.y, ]
setwd("~/Coursera/Coursera_Works/Getting_and_Cleaning_Data/Getting_and_Cleaning_Data_Project/UCI HAR Dataset")
ls()
x_train <- read.table("~/train/X_train.txt")
getwd()
?read.table
cur_dir <- getwd()
target_file <- cur_dir + "/train/X_train.txt"
target_file <- c(cur_dir, "/train/X_train.txt")
X_train <- read.table(target_file)
target_file
target_file <- paste0(target_file)
target_file
target_file <- paste(cur_dir, "/train/X_train.txt", sep = "")
target_file
X_train <- read.table(target_file)
head(X_train)
head(X_train)
features_tbl <- read.table("features.txt", header = FALSE)
head(features_tbl)
target_features <- grepl(features_tbl, "mean|std[^F]")
?grepl
target_features <- grepl("mean|std[^F]", features_tbl)
target_features
target_features <- grepl("mean|std[^F]", features_tbl$V2)
target_features
features_tbl[target_features]
features_tbl[target_features, ]
target_features <- grepl("mean[^F]|std", features_tbl$V2)
features_tbl[target_features, ]
dim(X_train)
y_train_file <- paste(cur_dir, "/train/Y_train.txt", sep = "")
y_train <- read.table(y_train_file, nrows = 100)
dim(y_train)
head(y_train)
y_train <- read.table(y_train_file)
dim(y_train)
x_train[1:100, target_features]
X_train[1:100, target_features]
getwd()
setwd("../")
getwd()
test <- read.table(paste(getwd(), "train/y_train.txt", sep = ""))
setwd("./UCI HAR Dataset")
cur_dir <- getwd()
cur_dir
file_names <- c("/activity_labels.txt", "/features.txt", "/train/X_train.txt", "/train/y_train.txt", "/train/subject_train.txt", "/test/X_test.txt", "/test/y_test.txt", "/test/subject_test.txt")
file_names
file_names <- paste(cur_dir, file_names)
file_names
as.table(file_names)
as.data.frame(file_names)
activity_labels <- read.table(file_names[1])
file_names <- c("/activity_labels.txt", "/features.txt", "/train/X_train.txt", "/train/y_train.txt", "/train/subject_train.txt", "/test/X_test.txt", "/test/y_test.txt", "/test/subject_test.txt")
file_names <- past(cur_dir, file_names, sep = "")
file_names <- paste(cur_dir, file_names, sep = "")
activity_labels <- read.table(file_names[1])
activity_labels
names(activity_labels) <- c("NUMBER", "ACTIVITY")
activity_labels
features_tbl <- read.table(file_names[2], header = FALSE)
target_features <- grepl("mean[^F]|std", features_tbl$V2)
X_train <- read.table(file_names[3], header = FALSE)[, target_features]
dim(X_train)
features_tbl[20, target_features]
features_tbl[target_features, ]
y_train <- read.table(file_names[4], header = FALSE)
head(y_train)
subject_train <- read.table(file_names[5], header = FALSE)
head(subject_train)
unique(subject_train)
dim(subject_train)
dim(unique(subject_train))
names(X_train)
features_tbl
names(X_train) <- features_tbl[target_features]
test_features <- read.csv(file_names[2])
head(test_features)
test_features <- read.csv(file_names[2], header = FALSE)
dim(features_tbl)
names(X_train) <- features_tbl[target_features, 2]
names(X_train)
head(X_train)
X_test <- read.table(file_names[6], header = FALSE)[, target_features]
names(X_test) <- features_tbl[target_features, 2]
test_merge <- rbind(X_train, X_test)
head(test_merge)
summary(test_merge)
test_merge <- cbind(subject_train, X_train, y_train)
names(test_merge)
head(test_merge)
names(y_train) <- "ACTIVITY_NUMBER"
names(subject_train) <- "SUBJECT_ID"
test_merge <- cbind(subject_train, X_train, y_train)
names(test_merge)
feature_names <- features_tbl[target_features, 2]
feature_names
feature_names <- gsub("^t", "Time.", feature_names)
feature_names
feature_names <- gsub("^f", "Frequency.", feature_names)
feature_names <- gsub("Body+", "Body.", feature_names)
feature_names
feature_names <- gsub("Body.{2}", "Body.", feature_names)
feature_names
feature_names <- gsub("Body\.{2}", "Body.", feature_names)
feature_names <- features_tbl[target_features, 2]
feature_names <- gsub("^t", "Time.", feature_names)
feature_names <- gsub("^f", "Frequency.", feature_names)
feature_names <- gsub("(Body)+", "Body.", feature_names)
feature_names
feature_names <- gsub("Acc", "Acceleration.", feature_names)
feature_names
feature_names <- gsub("Gyro", "Gryoscope.", feature_names)
feature_names <- gsub("Mag", "Magnitude.", feature_names)
feature_names
feature_names <- gsub("Gravity", "Gravity.", feature_names)
feature_names <- gsub("Jerk", "Jerk.", feature_names)
feature_names <- gsub("Gravity", "Gravity.", feature_names)
feature_names
feature_names <- gsub("\.\.", ",", feature_names)
feature_names <- gsub(\"..", ",", feature_names)
feature_names <- gsub(\.\., ",", feature_names)
feature_names <- gsub("\\..", ",", feature_names)
feature_names
feature_names <- features_tbl[target_features, 2]
feature_names <- gsub("^t", "Time.", feature_names)
feature_names <- gsub("^f", "Frequency.", feature_names)
feature_names <- gsub("(Body)+", "Body.", feature_names)
feature_names <- gsub("Acc", "Acceleration.", feature_names)
feature_names <- gsub("Gyro", "Gryoscope.", feature_names)
feature_names <- gsub("Mag", "Magnitude.", feature_names)
feature_names <- gsub("Gravity", "Gravity.", feature_names)
feature_names <- gsub("Jerk", "Jerk.", feature_names)
feature_names
feature_names <- gsub("-mean\\(\\)-", "Mean.", feature_names)
feature_names
feature_names <- features_tbl[target_features, 2]
feature_names <- gsub("^t", "Time.", feature_names)
feature_names <- gsub("^f", "Frequency.", feature_names)
feature_names <- gsub("(Body)+", "Body.", feature_names)
feature_names <- gsub("Acc", "Acceleration.", feature_names)
feature_names <- gsub("Gyro", "Gryoscope.", feature_names)
feature_names <- gsub("Mag", "Magnitude.", feature_names)
feature_names <- gsub("Gravity", "Gravity.", feature_names)
feature_names <- gsub("Jerk", "Jerk.", feature_names)
feature_names <- gsub("-mean\\(\\)(-)*", "Mean.", feature_names)
feature_names
feature_names <- gsub("-std\\(\\)(-)*", "Std.", feature_names)
feature_names
names(subject_train)
activity_labels
test_vector <- c(1:6, 6:1)
test_vector
gsub(activity_labels$NUMBER, activity_labels$ACTIVITY)
gsub(activity_labels$NUMBER, activity_labels$ACTIVITY, test_vector)
head(y_train, 50)
?replace
replace(test_vector, [1:6], activity_labels$ACTIVITY)
replace(test_vector, 1:6, activity_labels$ACTIVITY)
replace(test_vector, list(1:6), activity_labels$ACTIVITY)
?list
replace(test_vector, activity_labels$NUMBER, activity_labels$ACTIVITY)
test_vector
test_vector[1]
activity_labels
activity_labels[1]
activity_labels[[1]]
replace(text_vector, activity_labels[[1]], activity_labels[[2]])
replace(test_vector, activity_labels[[1]], activity_labels[[2]])
activity_labels[[2]]
activity_labels[2][1]
activity_labels[2][1][1]
activity_labels$ACTIVITY[1]
activities <- as.list(activity_labels$ACTIVITY)
activities
activities <- as.character(activity_labels$ACTIVITY)
activities
activities[1]
?for
class(y_train)
class(y_train$ACTIVITY_NUMBER)
test_vector <- replace(test_vector, 1, activities[1])
test_vector
test_vector <- gsub("1", activities, test_vector)
test_vector
test_vector <- c(1:6, 6:1)
test_vectory
test_vector
for(i in 1:6)
test_vector <- gsub(as.character(i), activities[i], test_vector)
test_vector
?group_by
library(dplyr)
?group_by
?summarize
